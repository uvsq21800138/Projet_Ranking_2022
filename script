########################################################## Variables
_start=5
_end=100
_staticAlpha=0.5
_staticRatio=0.3

########################################################## Fonction ProgressBar
function ProgressBar
{
    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

	printf "\rProgress : [${_fill// /#}${_empty// /-}] ${_progress}%%"
}

########################################################## Compilation du programme
make

########################################################## Pour chaque graphe, lancement de l'étude

######### wb-cs-stanford #########
_graphe=wb-cs-stanford
_num=1

printf "/// Etude de %s (%s/6) ///\n" "_graphe" "_num"
printf "Nombre d'itérations avant convergence de chaque algorithme selon le ratio de sommets détruits"
for ((c = _start; c < _end; c+5))
do
./ranking_release _graphe _graphe.csv 1 c/100 _staticAlpha
ProgressBar ${c} ${_end}
done

printf "Etude de %s (%s/6)\n" "_graphe" "_num"
printf "Nombre d'itérations avant convergence de chaque algorithme selon alpha"
for ((c = _start; c < _end; c+5))
do
./ranking_release _graphe _graphe.csv 1 _staticRatio c/100
ProgressBar ${c} ${_end}
done

######### wb-cs-stanford #########
printf "Etude de Stanford (2/6)\n"

######### wb-cs-stanford #########
printf "Etude de StanfordBerkeley (3/6)\n"

######### wb-cs-stanford #########
printf "Etude de Inde (4/6)\n"

######### wb-cs-stanford #########
printf "Etude de Web_edu (5/6)\n"

######### wb-cs-stanford #########
printf "Etude de Wikipedia2005 (6/6)\n"

########################################################## Génération des graphiques
printf "Génération des graphiques en cours...\n"
R CMD BATCH study.R